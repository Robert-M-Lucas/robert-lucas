import P_img from "../../components/project_entry_utils/P_img.tsx"
import options_code from "./assets/options_code.png"
import code from "./assets/code.png"
import pattern2 from "./assets/pattern2.png"
import pattern from "./assets/pattern.png"
import { githubLink } from "../../routes/projects/SingleProjectPage/links.tsx"
import { Project } from "../../routes/projects/SingleProjectPage/project.ts"
import ProjWrapper from "../../components/project_entry_utils/project_wrapper/ProjWrapper.tsx"
import P_p from "../../components/project_entry_utils/P_p.tsx"
import { pythonTechnology } from "../../routes/projects/SingleProjectPage/technology.tsx"

export const geometricPatternProject: Project = {
  name: "geometric_pattern",
  title: "Geometric Pattern Generator",
  subtitle: "Generating a geometric pattern for use in future projects",
  msSinceEpoch: null,
  image: { image: pattern, alt: "TODO" },
  technologies: [pythonTechnology],
  links: [
    {
      url: "https://github.com/Robert-M-Lucas/TriangleGenerator",
      type: githubLink,
    },
  ],
  page: GeometricPatternEntryPage,
}

function GeometricPatternEntryPage() {
  return (
    <ProjWrapper>
      <P_img
        image={pattern}
        alt={"TODO"}
        caption={"Pattern generated with this project"}
      />
      <P_p>
        This is a simple project I've made to generate these geometric patterns
        which have all sorts of applications such as website backgrounds. It
        works by generating a grid of squares with lines dividing them into
        triangles (these lines can generate either way). The points of these
        squares are then translated randomly to create that triangle pattern
      </P_p>
      <P_img
        image={pattern2}
        alt={"TODO"}
        caption={
          "Setting the random offsets to 0 demonstrates how it is generated"
        }
      />
      <P_p>
        The colours are generated by finding a point's distance from the four
        corners and mixing the four corners' colours proportionately. A corner's
        colour can be set to 'None' to make it have no effect. The random color
        variance is achieved by generating a random shade of grey and adding or
        subtracting it from the triangle's color
      </P_p>
      <P_img
        legacyNaturalWidth
        image={code}
        alt={"TODO"}
        caption={
          "Code for getting the color of a triangle (without random colour variation)"
        }
      />
      <P_img
        legacyNaturalWidth
        image={options_code}
        alt={"TODO"}
        caption={"Options available"}
      />
    </ProjWrapper>
  )
}
