import Pimg from "../../components/project_entry_utils/Pimg.tsx"
import five from "./assets/five.png"
import four from "./assets/four.png"
import three from "./assets/three.png"
import two from "./assets/two.png"
import one from "./assets/one.png"
import { GITHUB_LINK } from "../../routes/projects/SingleProjectPage/links.tsx"
import { Project } from "../../routes/projects/SingleProjectPage/project.ts"
import ProjWrapper from "../../components/project_entry_utils/ProjWrapper.tsx"
import Pp from "../../components/project_entry_utils/Pp.tsx"
import {
  JAVA,
  GPU,
} from "../../routes/projects/SingleProjectPage/technology.tsx"
import Pul from "../../components/project_entry_utils/Pul.tsx"
import Pli from "../../components/project_entry_utils/Pli.tsx"

export const FractalProject: Project = {
  name: "fractal",
  title: "Mandlebrot Fractal Explorer",
  subtitle:
    "An app that renders and allows you to explore the Madlebrot (and burning ship) fractal",
  ms_since_epoch: null,
  image: { image: one, alt: "TODO" },
  technologies: [JAVA, GPU],
  links: [
    {
      url: "https://github.com/Robert-M-Lucas/Mandlebrot-Fractal-GPU",
      type: GITHUB_LINK,
    },
  ],
  page: FractalEntryPage,
}

function FractalEntryPage() {
  return (
    <ProjWrapper>
      <Pimg
        image={one}
        alt={"TODO"}
        caption={
          "Image generated by my program. Originally at 10000x10000 but compressed heavily"
        }
      />
      <Pp>
        This program renders and allows you to explore (pan, zoom in, etc.) the
        Mandlebrot and burning ship fractal as well as render screenshots at a
        resolution higher than your monitor. In theory you would be able to zoom
        in infinitely however the double precision limit is hit after around 20
        zoom ins.
      </Pp>
      <Pp>
        Despite its flaws, this is one of my favourite projects as it was my
        first project in Java and the fractals look beautiful. It is also a nice
        combination of maths and computer science which I both like.
      </Pp>
      <Pp>
        This is one of my older projects, however, and I would like to redo it
        with some improvements:
        <Pul>
          <Pli>Getting around the double precision limit</Pli>
          <Pli>
            If you zoom in 2x, one pixel should be saved and three new pixels
            generated instead of a complete regeneration
          </Pli>
          <Pli>
            The render feature could save to disk as it runs stopping it from
            being RAM-limited
          </Pli>
        </Pul>
      </Pp>
      <Pimg image={two} alt={"TODO"} />
      <Pimg image={three} alt={"TODO"} />
      <Pimg image={four} alt={"TODO"} />
      <Pimg
        image={five}
        alt={"TODO"}
        caption={"An early test of a more optimised screenshot system"}
      />
    </ProjWrapper>
  )
}
